#Mark Processing

#Print score-based Mark List 
When announcing the scores for an internal test,  it is normal to print something like the following (in alphabetical order)

Adam 90
Bosch 72
Candy 44
Damon 44
Ebony 88
Frederick 100
George 99
Harry 99
Insha 80
John 22
King 44

However, given such list, write a program that prints the score details  
that is sorted based on the actual score, as given in the format below: 

[(100, 'Frederick'),
(99, ['George', 'Harry']),
(90, 'Adam'),
(88, 'Ebony'),
(80, 'Insha'),
(72, 'Bosch'),
(44, ['Candy', 'Damon', 'King']),
(22, 'John')]

If a particular score has been scored by more than one student, then the list containing 
multiple student names must be sorted in ascending order. 

#code

n = int(input()) 

inputDict = {}

for _ in range(n): 
  
 name, score = input().split()
  
 inputDict[name] = int(score)
 scoreDict = {}

for key,value in sorted(inputDict.items()):
  
 if value not in scoreDict.keys():
    
  scoreDict[value]=key
  
 else:
    
  try:
      
   scoreDict[value].append(key)
    
  except:
      
   scoreDict[value]=[scoreDict[value]]
      
   scoreDict[value].append(key)
      




from pprint import pprint 

pprint(sorted(scoreDict.items(), reverse=True))
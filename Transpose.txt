#Transpose a Matrix
Perform a transpose of the matrix given. 
If the input matrix is ill-formed, use 0 for the fill value. 

#For example, 

[[1], 
 [2, 3, 4], 
 [5, 6]
] => 

[[1, 0, 0], 
 [2, 3, 4], 
 [5, 6, 0]
]

#EXAMPLE 

transpose_matrix([[1, 2], [3, 4]]) -> [[1, 3], [2, 4]]

transpose_matrix([[1, 2], [3]) -> [[1, 3], [2, 0]]

transpose_matrix([[1, 2, 3], 
                 [4, 5, 6], 
                 [7, 8, 9]]) -> 

[[1, 4, 7],[2, 5, 8], [4, 6, 9]]

#code

def transpose_matrix(matrix):

    
length = 0
    
for Set in matrix:
        
if len(Set) > length:
            
length = len(Set)

    
copy = [[0 for x in range(length)] 
for y in range(len(matrix))]

    
for i in range(len(matrix)):
        
for j in range(length):
            
try:
                
copy[i][j] = matrix[i][j]
            
except:
                
pass

    
matrix.clear()

    
for i in range(length):
        
matrix.append([copy[0][i]])
        
for j in range(1, len(copy)):
            
try:
                
matrix[i][j] = copy[j][i]
            
except:
                
matrix[i].append(copy[j][i])

    
return matrix